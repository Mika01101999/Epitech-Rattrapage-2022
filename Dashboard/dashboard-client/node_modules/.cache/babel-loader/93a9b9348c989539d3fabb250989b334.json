{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelassouline/TECK3/BTBTTF/Epitech-Rattrapage-2022/Dashboard/dashboard-client/src/service/Weather.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Button } from 'react-bootstrap';\nimport logo1 from \"../assets/nuage.svg\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayWeather = () => {\n  _s();\n\n  const [temperature, setTemperature] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  var date = new Date().toLocaleString();\n\n  const getWeatherData = (city, country) => {\n    axios({\n      method: \"GET\",\n      url: `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=bf63324dffc9c04fd1dd5f575ac75753`\n    }).then(response => {\n      console.log(response.data.main.temp);\n      setTemperature(response.data.main.temp - 273.15);\n      setDesc(response.data.weather[0].main);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const setDate = () => {\n    date = new Date().toLocaleString();\n  };\n\n  const tasks = React.useMemo(() => [{\n    fn: getWeatherData,\n    config: '* * * * *'\n  }, {\n    fn: setDate,\n    config: '* * * * *'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '39rem',\n        height: '20rem',\n        backgroundColor: '#ececec'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top-left\",\n        src: logo1,\n        width: \"50\",\n        height: \"50\",\n        align: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Weather Service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"City: \", city]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Date: \", date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Temperature: \", Math.round(temperature * 100) / 100, \" \\u2103\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"Weather: \", desc]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: city,\n          onChange: e => setCity(e.target.value),\n          placeholder: \"Enter City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: country,\n          onChange: e => setCountry(e.target.value),\n          placeholder: \"Enter Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setDate();\n            getWeatherData(city, country);\n          },\n          children: \"Get Infos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DisplayWeather, \"g75bnf8S0PYTDLpCXWYntJIneg4=\");\n\n_c = DisplayWeather;\nexport default DisplayWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayWeather\");","map":{"version":3,"sources":["/Users/mickaelassouline/TECK3/BTBTTF/Epitech-Rattrapage-2022/Dashboard/dashboard-client/src/service/Weather.js"],"names":["Card","Button","React","useState","axios","DisplayWeather","temperature","setTemperature","desc","setDesc","city","setCity","country","setCountry","date","Date","toLocaleString","getWeatherData","method","url","then","response","console","log","data","main","temp","weather","catch","error","setDate","tasks","useMemo","fn","config","width","height","backgroundColor","logo1","Math","round","e","target","value"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Button } from 'react-bootstrap';\nimport logo1 from \"../assets/nuage.svg\";\nimport React, { useState } from \"react\"\nimport axios from \"axios\";\n\nconst DisplayWeather = () => {\n    const [temperature, setTemperature] = useState(\"\");\n    const [desc, setDesc] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const [country, setCountry] = useState(\"\");\n    var date = new Date().toLocaleString();\n\n    const getWeatherData = (city, country) => {\n      axios({\n        method: \"GET\",\n        url: `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=bf63324dffc9c04fd1dd5f575ac75753`,\n      })\n        .then((response) => {\n          console.log(response.data.main.temp);\n          setTemperature(response.data.main.temp - 273.15);\n          setDesc(response.data.weather[0].main);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    };\n\n    const setDate = () => {\n      date = new Date().toLocaleString();\n    };\n    \n    const tasks = React.useMemo(\n      () => [\n        {\n          fn: getWeatherData,\n          config: '* * * * *'\n        },\n        {\n          fn: setDate,\n          config: '* * * * *'\n        },\n      ],\n      []\n    )\n\n      return (\n        <div >\n          <Card style={{ width: '39rem', height: '20rem' , backgroundColor: '#ececec'}}>\n            <Card.Img variant=\"top-left\" src={logo1} width=\"50\"\n              height=\"50\" align=\"left\"/>\n            <Card.Body>\n              <Card.Title>Weather Service</Card.Title>\n              <Card.Text>\n                City: {city}\n              </Card.Text>\n              <Card.Text>\n                Date: {date}\n              </Card.Text>\n              <Card.Text>\n                Temperature: {Math.round(temperature * 100) / 100} â„ƒ\n              </Card.Text>\n              <Card.Text>\n                Weather: {desc}\n              </Card.Text>\n              <br />\n              <input\n                type=\"text\"\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n                placeholder=\"Enter City\"\n              />\n              <input\n                type=\"text\"\n                value={country}\n                onChange={(e) => setCountry(e.target.value)}\n                placeholder=\"Enter Country\"\n              />\n              <button\n                onClick={() => {\n                  setDate();\n                  getWeatherData(city, country);\n                }}\n              >\n                Get Infos\n              </button>\n            </Card.Body>\n          </Card>\n        </div>\n      )\n}\n\nexport default DisplayWeather"]},"metadata":{},"sourceType":"module"}