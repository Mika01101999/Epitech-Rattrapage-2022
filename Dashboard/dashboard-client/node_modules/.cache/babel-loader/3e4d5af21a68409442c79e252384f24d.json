{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelassouline/TECK3/BTBTTF/Epitech-Rattrapage-2022/Dashboard/dashboard-client/src/service/Geolocation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Button } from 'react-bootstrap';\nimport logo1 from \"../assets/pin.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GeolocaWidget = () => {\n  _s();\n\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: \"Geolocation ne marche pas sur votre navigateur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this);\n    }\n  };\n\n  const showPosition = position => {\n    setLatitude(position.coords.latitude);\n    setLongitude(position.coords.longitude);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '39rem',\n        height: '20rem',\n        backgroundColor: '#ececec'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top-left\",\n        src: logo1,\n        width: \"50\",\n        height: \"50\",\n        align: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Geolocation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"latitude: \", latitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [\"longitude: \", longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            getLocation();\n          },\n          children: \"Get Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }, this);\n};\n\n_s(GeolocaWidget, \"E2uCXDz6te+pVo4BYChvoN6zhsA=\");\n\n_c = GeolocaWidget;\nexport default GeolocaWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeolocaWidget\");","map":{"version":3,"sources":["/Users/mickaelassouline/TECK3/BTBTTF/Epitech-Rattrapage-2022/Dashboard/dashboard-client/src/service/Geolocation.js"],"names":["React","useState","Card","Button","GeolocaWidget","latitude","setLatitude","longitude","setLongitude","getLocation","navigator","geolocation","getCurrentPosition","showPosition","position","coords","width","height","backgroundColor","logo1"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,sCAAP;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAG1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMQ,WAAW,GAAG,MAAM;AACxB,QAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,YAAzC;AACD,KAFD,MAEO;AACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;AACF,GAND;;AAQA,QAAMA,YAAY,GAAIC,QAAD,IAAc;AACjCR,IAAAA,WAAW,CAACQ,QAAQ,CAACC,MAAT,CAAgBV,QAAjB,CAAX;AACAG,IAAAA,YAAY,CAACM,QAAQ,CAACC,MAAT,CAAgBR,SAAjB,CAAZ;AACD,GAHD;;AAME,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,MAAM,EAAE,OAA1B;AAAoCC,QAAAA,eAAe,EAAE;AAArD,OAAb;AAAA,8BACE,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAC,UAAlB;AAA6B,QAAA,GAAG,EAAEC,KAAlC;AAAyC,QAAA,KAAK,EAAC,IAA/C;AACE,QAAA,MAAM,EAAC,IADT;AACc,QAAA,KAAK,EAAC;AADpB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,mCACad,QADb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA,oCACcE,SADd;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AACI,UAAA,OAAO,EAAE,MAAM;AACbE,YAAAA,WAAW;AACZ,WAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBH,CA5CD;;GAAML,a;;KAAAA,a;AA8CN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Button } from 'react-bootstrap';\nimport logo1 from \"../assets/pin.svg\";\n\nconst GeolocaWidget = () => {\n\n\n  const [latitude, setLatitude] = useState(\"\");\n  const [longitude, setLongitude] = useState(\"\");\n  \n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      <p>Geolocation ne marche pas sur votre navigateur</p>\n    }\n  }\n  \n  const showPosition = (position) => {\n    setLatitude(position.coords.latitude)\n    setLongitude(position.coords.longitude)\n  }\n  \n\n    return (\n      <div >\n        <Card style={{ width: '39rem', height: '20rem' , backgroundColor: '#ececec'}}>\n          <Card.Img variant=\"top-left\" src={logo1} width=\"50\"\n            height=\"50\" align=\"left\"/>\n          <Card.Body>\n            <Card.Title>Geolocation</Card.Title>\n            <Card.Text>\n              latitude: {latitude}\n            </Card.Text>\n            <Card.Text>\n              longitude: {longitude}\n            </Card.Text>\n            <button\n                onClick={() => {\n                  getLocation();\n                }}\n              >\n                Get Position\n              </button>\n          </Card.Body>\n        </Card>\n      </div>\n    )\n}\n\nexport default GeolocaWidget"]},"metadata":{},"sourceType":"module"}