{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelassouline/TECK3/BTBTTF/Epitech-Rattrapage-2022/Dashboard/dashboard-client/src/Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { withSize } from \"react-sizeme\";\nimport TopBar from \"./TopBar\";\nimport CurrencyWidget from \"./service/Exchange\";\nimport GeolocaWidget from \"./service/Geolocation\";\nimport DisplayWeather from \"./service/Weather\";\nimport { CovidCountryWidget, CovidCountryChartWidget, CovidGlobalWidget } from \"./service/Covid\";\nimport GoogleCalendar from \"./service/Gmail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst originalItems = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\nconst initialLayouts = {\n  lg: [{\n    i: \"a\",\n    x: 0,\n    y: 0,\n    w: 1,\n    h: 4\n  }, {\n    i: \"b\",\n    x: 1,\n    y: 0,\n    w: 3,\n    h: 4\n  }, {\n    i: \"c\",\n    x: 4,\n    y: 0,\n    w: 1,\n    h: 4\n  }, {\n    i: \"d\",\n    x: 0,\n    y: 4,\n    w: 2,\n    h: 4\n  }, {\n    i: \"e\",\n    x: 2,\n    y: 1,\n    w: 0,\n    h: 4\n  }, {\n    i: \"f\",\n    x: 2,\n    y: 1,\n    w: 0,\n    h: 4\n  }]\n};\n\nfunction Content(_ref) {\n  _s();\n\n  let {\n    size: {\n      width\n    }\n  } = _ref;\n  const [items, setItems] = useState(originalItems);\n  const [layouts, setLayouts] = useState(getFromLS(\"layouts\") || initialLayouts);\n\n  const onLayoutChange = (_, allLayouts) => {\n    setLayouts(allLayouts);\n  };\n\n  const onLayoutSave = () => {\n    saveToLS(\"layouts\", layouts);\n  };\n\n  const onRemoveItem = itemId => {\n    setItems(items.filter(i => i !== itemId));\n  };\n\n  const onAddItem = itemId => {\n    setItems([...items, itemId]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      onLayoutSave: onLayoutSave,\n      items: items,\n      onRemoveItem: onRemoveItem,\n      onAddItem: onAddItem,\n      originalItems: originalItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveGridLayout, {\n      className: \"layout\",\n      layouts: layouts,\n      breakpoints: {\n        lg: 1200,\n        md: 996,\n        sm: 768,\n        xs: 480,\n        xxs: 0\n      },\n      cols: {\n        lg: 12,\n        md: 10,\n        sm: 6,\n        xs: 4,\n        xxs: 2\n      },\n      rowHeight: 160,\n      width: 2600,\n      onLayoutChange: onLayoutChange,\n      children: items.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget\",\n        \"data-grid\": {\n          w: 3,\n          h: 2,\n          x: 0,\n          y: Infinity\n        },\n        children: key == \"a\" ? /*#__PURE__*/_jsxDEV(GeolocaWidget, {\n          id: key,\n          onRemoveItem: onRemoveItem,\n          backgroundColor: \"#867ae9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this) : key == \"b\" ? /*#__PURE__*/_jsxDEV(CovidCountryChartWidget, {\n          id: key,\n          onRemoveItem: onRemoveItem,\n          backgroundColor: \"#867ae9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this) : key == \"c\" ? /*#__PURE__*/_jsxDEV(CovidCountryWidget, {\n          id: key,\n          onRemoveItem: onRemoveItem,\n          backgroundColor: \"#867ae9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this) : key == \"d\" ? /*#__PURE__*/_jsxDEV(CovidGlobalWidget, {\n          id: key,\n          onRemoveItem: onRemoveItem,\n          backgroundColor: \"#867ae9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this) : key == \"e\" ? /*#__PURE__*/_jsxDEV(CurrencyWidget, {\n          id: key,\n          onRemoveItem: onRemoveItem,\n          backgroundColor: \"#867ae9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }, this) : key == \"f\" ? /*#__PURE__*/_jsxDEV(DisplayWeather, {\n          id: key,\n          onRemoveItem: onRemoveItem,\n          backgroundColor: \"#867ae9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(GoogleCalendar, {\n          id: key,\n          onRemoveItem: onRemoveItem,\n          backgroundColor: \"#867ae9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Content, \"2iVd3nnyDzm/7ZOLRGr/oar4wKA=\");\n\n_c = Content;\nexport default withSize({\n  refreshMode: \"debounce\",\n  refreshRate: 60\n})(Content);\n\nfunction getFromLS(key) {\n  let ls = {};\n\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) {}\n  }\n\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\"rgl-8\", JSON.stringify({\n      [key]: value\n    }));\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/mickaelassouline/TECK3/BTBTTF/Epitech-Rattrapage-2022/Dashboard/dashboard-client/src/Content.js"],"names":["React","useState","Responsive","ResponsiveGridLayout","withSize","TopBar","CurrencyWidget","GeolocaWidget","DisplayWeather","CovidCountryWidget","CovidCountryChartWidget","CovidGlobalWidget","GoogleCalendar","originalItems","initialLayouts","lg","i","x","y","w","h","Content","size","width","items","setItems","layouts","setLayouts","getFromLS","onLayoutChange","_","allLayouts","onLayoutSave","saveToLS","onRemoveItem","itemId","filter","onAddItem","md","sm","xs","xxs","map","key","Infinity","refreshMode","refreshRate","ls","global","localStorage","JSON","parse","getItem","e","value","setItem","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Responsive as ResponsiveGridLayout } from \"react-grid-layout\";\nimport { withSize } from \"react-sizeme\";\nimport TopBar from \"./TopBar\";\nimport CurrencyWidget from \"./service/Exchange\";\nimport GeolocaWidget from \"./service/Geolocation\";\nimport DisplayWeather from \"./service/Weather\";\nimport { CovidCountryWidget, CovidCountryChartWidget, CovidGlobalWidget } from \"./service/Covid\";\nimport GoogleCalendar from \"./service/Gmail\";\n\nconst originalItems = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n\nconst initialLayouts = {\n  lg: [\n    { i: \"a\", x: 0, y: 0, w: 1, h: 4 },\n    { i: \"b\", x: 1, y: 0, w: 3, h: 4 },\n    { i: \"c\", x: 4, y: 0, w: 1, h: 4 },\n    { i: \"d\", x: 0, y: 4, w: 2, h: 4 },\n    { i: \"e\", x: 2, y: 1, w: 0, h: 4 },\n    { i: \"f\", x: 2, y: 1, w: 0, h: 4 } \n  ]\n};\nfunction Content({ size: { width } }) {\n  const [items, setItems] = useState(originalItems);\n  const [layouts, setLayouts] = useState(\n    getFromLS(\"layouts\") || initialLayouts\n  );\n  const onLayoutChange = (_, allLayouts) => {\n    setLayouts(allLayouts);\n  };\n  const onLayoutSave = () => {\n    saveToLS(\"layouts\", layouts);\n  };\n  const onRemoveItem = (itemId) => {\n    setItems(items.filter((i) => i !== itemId));\n  };\n  const onAddItem = (itemId) => {\n    setItems([...items, itemId]);\n  };\n\n  return (\n    <>\n      <TopBar\n        onLayoutSave={onLayoutSave}\n        items={items}\n        onRemoveItem={onRemoveItem}\n        onAddItem={onAddItem}\n        originalItems={originalItems}\n      />\n      <ResponsiveGridLayout\n        className=\"layout\"\n        layouts={layouts}\n        breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n        cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n        rowHeight={160}\n        width={2600}\n        onLayoutChange={onLayoutChange}\n      >\n        {items.map((key) => (\n          <div\n            key={key}\n            className=\"widget\"\n            data-grid={{ w: 3, h: 2, x: 0, y: Infinity }}\n          >\n            {key == \"a\" ? (\n              < GeolocaWidget\n                id={key}\n                onRemoveItem={onRemoveItem}\n                backgroundColor=\"#867ae9\"\n              />) : (key == \"b\" ? (\n                < CovidCountryChartWidget\n                  id={key}\n                  onRemoveItem={onRemoveItem}\n                  backgroundColor=\"#867ae9\"\n                />) : (key == \"c\" ? (\n                  < CovidCountryWidget\n                    id={key}\n                    onRemoveItem={onRemoveItem}\n                    backgroundColor=\"#867ae9\"\n                  />) : (key == \"d\" ? (\n                    < CovidGlobalWidget\n                      id={key}\n                      onRemoveItem={onRemoveItem}\n                      backgroundColor=\"#867ae9\"\n                    />) : (key == \"e\" ? (\n                      < CurrencyWidget\n                        id={key}\n                        onRemoveItem={onRemoveItem}\n                        backgroundColor=\"#867ae9\"\n                      />) : (key == \"f\" ? (\n                      < DisplayWeather\n                        id={key}\n                        onRemoveItem={onRemoveItem}\n                        backgroundColor=\"#867ae9\"\n                      />) : \n                      <GoogleCalendar\n                        id={key}\n                        onRemoveItem={onRemoveItem}\n                        backgroundColor=\"#867ae9\"\n                      />)\n                ))\n              )\n            )\n            }\n          </div>\n        )\n        )\n        }\n      </ResponsiveGridLayout>\n    </>\n  );\n}\n\nexport default withSize({ refreshMode: \"debounce\", refreshRate: 60 })(Content);\n\nfunction getFromLS(key) {\n  let ls = {};\n  if (global.localStorage) {\n    try {\n      ls = JSON.parse(global.localStorage.getItem(\"rgl-8\")) || {};\n    } catch (e) { }\n  }\n  return ls[key];\n}\n\nfunction saveToLS(key, value) {\n  if (global.localStorage) {\n    global.localStorage.setItem(\n      \"rgl-8\",\n      JSON.stringify({\n        [key]: value\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}